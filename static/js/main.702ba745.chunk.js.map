{"version":3,"sources":["components/addForm/addForm.js","actions/index.js","components/navbar/navbar.js","components/addTask/addTask.js","components/tasklist/tasklist.js","components/content/content.js","components/app/app.js","reducers/folders.js","reducers/tasks.js","reducers/index.js","store.js","index.js"],"names":["mapDispatchToProps","ADD_FOLDER","title","color","id","type","payload","connect","onFormClose","useState","selected","setSelected","inputRef","useRef","addFolder","current","value","uuid","className","autoFocus","onKeyPress","e","key","placeholder","ref","map","elem","onClick","item","classNames","green_pick","blue_pick","grass_pick","pink_pick","grey_pick","purple_pick","black_pick","red_pick","active_pick","DELETE_FOLDER","state","folders","onFolderChange","active","setActive","openForm","setOpenForm","length","preventDefault","folder__link","green_nav","blue_nav","grass_nav","pink_nav","grey_nav","purple_nav","black_nav","red_nav","active_nav","width","height","viewBox","fill","xmlns","d","ADD_TASK","folId","text","onClose","taskInputRef","addTask","DELETE_TASK","COMPLETE_TASK","tasks","openAddForm","setOpenAddForm","setClass","task__link","completed","done","useEffect","filter","el","target","classList","contains","href","alt","RENAME_FOLDER","editable","setEditable","currentFolder","editRef","document","addEventListener","handleClick","removeEventListener","elems","node","defaultValue","isHeader","isEdit","header","edit__input","green_text","blue_text","grass_text","pink_text","grey_text","purple_text","black_text","red_text","editName","onBlur","App","folder","setFolder","initialstate","action","newState","newFolders","idx","findIndex","newTasks","splice","combineReducers","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.702ba745.chunk.js","sourcesContent":["import React, {useState, useRef} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport {ADD_FOLDER} from \"../../actions\";\r\nimport {v4 as uuid} from \"uuid\";\r\n\r\nimport \"./addForm.scss\";\r\n\r\nconst AddForm = ({onFormClose, ADD_FOLDER}) => {\r\n    const [selected, setSelected] = useState(\"grey\");\r\n    const inputRef = useRef();\r\n    const colors = [\"grey\", \"green\", \"blue\", \"pink\", \"grass\", \"purple\", \"black\", \"red\"];\r\n    const setClass = (item) => {\r\n        return classNames({\r\n            color: true,\r\n            green_pick: item === \"green\",\r\n            blue_pick: item === \"blue\",\r\n            grass_pick: item === \"grass\",\r\n            pink_pick: item === \"pink\",\r\n            grey_pick: item === \"grey\",\r\n            purple_pick: item === \"purple\",\r\n            black_pick: item === \"black\",\r\n            red_pick: item === \"red\",\r\n            active_pick: item === selected\r\n        })\r\n    };\r\n    const addFolder = () => {\r\n        if(inputRef.current.value){\r\n            ADD_FOLDER(inputRef.current.value, selected, uuid());\r\n            onFormClose();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"add-form\">\r\n            <input\r\n                autoFocus={true}\r\n                onKeyPress={(e) => {\r\n                    if(e.key === \"Enter\"){\r\n                        addFolder();\r\n                    }\r\n                }}\r\n                placeholder=\"Название папки\"\r\n                ref={inputRef}\r\n                className=\"add-form__input\"\r\n                type=\"text\"/>\r\n            <ul className=\"color-picker\">\r\n                {colors.map(elem => {\r\n                    return <li\r\n                        onClick={() => setSelected(elem)}\r\n                        key={elem}\r\n                        className=\"color-picker__item\">\r\n                        <button className={setClass(elem)}/>\r\n                    </li>\r\n                })}\r\n            </ul>\r\n            <button\r\n                onClick={() => {\r\n                    if(inputRef.current.value){\r\n                        addFolder();\r\n                    }\r\n                }}\r\n                className=\"add-form__btn\">Добавить</button>\r\n            <button\r\n                onClick={() => onFormClose()}\r\n                className=\"add-form__close\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    ADD_FOLDER\r\n};\r\n\r\nexport default connect(false, mapDispatchToProps)(AddForm);","const ADD_FOLDER = (title, color, id) => {\r\n    return{\r\n        type: \"ADD_FOLDER\",\r\n        payload: {\r\n            title,\r\n            color,\r\n            id\r\n        }\r\n    }\r\n};\r\n\r\nconst DELETE_FOLDER = (id) => {\r\n    return {\r\n        type: \"DELETE_FOLDER\",\r\n        payload: id\r\n    }\r\n};\r\n\r\nconst RENAME_FOLDER = (title, id) => {\r\n  return {\r\n      type: \"RENAME_FOLDER\",\r\n      payload: {\r\n          title,\r\n          id\r\n      }\r\n  }\r\n};\r\n\r\nconst ADD_TASK = (id, folId, text) => {\r\n    return {\r\n        type: \"ADD_TASK\",\r\n        payload: {\r\n            id,\r\n            folId,\r\n            text\r\n        }\r\n    }\r\n};\r\n\r\nconst DELETE_TASK = (id) => {\r\n    return {\r\n        type: \"DELETE_TASK\",\r\n        payload: id\r\n    }\r\n};\r\n\r\nconst COMPLETE_TASK = (id) => {\r\n    return {\r\n        type: \"COMPLETE_TASK\",\r\n        payload: id\r\n    }\r\n};\r\n\r\nexport {\r\n    ADD_FOLDER,\r\n    DELETE_FOLDER,\r\n    RENAME_FOLDER,\r\n    ADD_TASK,\r\n    DELETE_TASK,\r\n    COMPLETE_TASK\r\n};","import React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport AddForm from \"../addForm/addForm\";\r\nimport {DELETE_FOLDER} from \"../../actions\";\r\n\r\nimport \"./navbar.scss\";\r\n\r\nconst Navbar = ({folders, onFolderChange, DELETE_FOLDER}) => {\r\n    const [active, setActive] = useState(null);\r\n    const [openForm, setOpenForm] = useState(false);\r\n\r\n    return(\r\n        <nav className=\"main_nav\">\r\n            {folders.length? <button\r\n                onClick={() => {\r\n                    onFolderChange(null);\r\n                    setActive(null);\r\n                }}\r\n                className=\"all__tasks\">Все задачи</button> : \"\"}\r\n            <ul className=\"folder__list\">\r\n                {folders ? folders.map(item => {\r\n                    return(\r\n                        <li\r\n                            key={item.id}\r\n                            className=\"folder__item\">\r\n                            <button\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                onFolderChange(item.id);\r\n                                setActive(item.id);\r\n                            }}\r\n                            className={classNames({\r\n                                folder__link: true,\r\n                                green_nav: item.color === \"green\",\r\n                                blue_nav: item.color === \"blue\",\r\n                                grass_nav: item.color === \"grass\",\r\n                                pink_nav: item.color === \"pink\",\r\n                                grey_nav: item.color === \"grey\",\r\n                                purple_nav: item.color === \"purple\",\r\n                                black_nav: item.color === \"black\",\r\n                                red_nav: item.color === \"red\",\r\n                                active_nav: item.id === active\r\n                            })}><span>{item.title}</span></button>\r\n                            {active === item.id ?\r\n                                <button\r\n                                    onClick={() => DELETE_FOLDER(item.id)}\r\n                                    className=\"folder__del-btn\">\r\n                                <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M6.24741 5L9.73899 1.50842C9.9047 1.343 9.99791 1.11853 9.99812 0.884393C9.99832 0.650251 9.90551 0.425617 9.74009 0.259907C9.57468 0.0941973 9.35021 0.000986589 9.11606 0.000779811C8.88192 0.000573033 8.65729 0.0933872 8.49158 0.258804L5 3.75038L1.50842 0.258804C1.34271 0.0930948 1.11796 0 0.883613 0C0.649264 0 0.424514 0.0930948 0.258804 0.258804C0.0930948 0.424514 0 0.649264 0 0.883613C0 1.11796 0.0930948 1.34271 0.258804 1.50842L3.75038 5L0.258804 8.49158C0.0930948 8.65729 0 8.88204 0 9.11639C0 9.35074 0.0930948 9.57549 0.258804 9.7412C0.424514 9.90691 0.649264 10 0.883613 10C1.11796 10 1.34271 9.90691 1.50842 9.7412L5 6.24962L8.49158 9.7412C8.65729 9.90691 8.88204 10 9.11639 10C9.35074 10 9.57549 9.90691 9.7412 9.7412C9.90691 9.57549 10 9.35074 10 9.11639C10 8.88204 9.90691 8.65729 9.7412 8.49158L6.24741 5Z\" fill=\"#9F9F9F\"/>\r\n                                </svg>\r\n                            </button> : \"\"}\r\n                        </li>\r\n                    )\r\n                }) : \"\"}\r\n            </ul>\r\n            <div className=\"wrapper\">\r\n                <button\r\n                onClick={() => setOpenForm(true)}\r\n                className=\"add__folder\">Добавить папку</button>\r\n                {openForm ? <AddForm onFormClose={() => setOpenForm(false)}/> : \"\"}\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n};\r\n\r\nconst maoStateToProps = (state) => {\r\n    return {\r\n        folders: state.folders\r\n    }\r\n};\r\nconst mapDispatchToProps = {\r\n    DELETE_FOLDER\r\n};\r\n\r\nexport default connect(maoStateToProps, mapDispatchToProps)(Navbar);","import React, {useRef} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {v4 as uuid} from \"uuid\";\r\nimport {ADD_TASK} from \"../../actions\";\r\n\r\nimport \"./addTask.scss\";\r\n\r\nconst AddTask = ({onClose, folId, ADD_TASK}) => {\r\n    const taskInputRef = useRef();\r\n    const addTask = () => {\r\n        if(taskInputRef.current.value){\r\n            ADD_TASK(uuid(), folId, taskInputRef.current.value);\r\n            onClose();\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div className=\"add-task\">\r\n            <input\r\n                autoFocus={true}\r\n                onKeyPress={(e) => {\r\n                    if(e.key === \"Enter\"){\r\n                        addTask();\r\n                    }\r\n                }}\r\n                ref={taskInputRef}\r\n                placeholder=\"Текст задачи\"\r\n                className=\"add-task__input\"/>\r\n            <button\r\n                onClick={() => {\r\n                    addTask();\r\n                }}\r\n                className=\"add-task__btn\">Добавить</button>\r\n            <button\r\n                onClick={() => onClose()}\r\n                className=\"add-task__cancel\">Отмена</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    ADD_TASK\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(AddTask);","import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {DELETE_TASK, COMPLETE_TASK} from \"../../actions\";\r\nimport classNames from \"classnames\";\r\nimport AddTask from \"../addTask/addTask\";\r\n\r\nimport \"./tasklist.scss\";\r\n\r\nconst Tasklist = ({tasks, folId, DELETE_TASK, COMPLETE_TASK}) => {\r\n    const [openAddForm, setOpenAddForm] = useState(false);\r\n    const setClass = (item) => classNames({\r\n        task__link: true,\r\n        completed: item.done\r\n    });\r\n\r\n    useEffect(() => {\r\n        setOpenAddForm(false);\r\n    }, [tasks, folId]);\r\n    return (\r\n        <div className=\"container\">\r\n            <ul className=\"tasks__list\">\r\n                {tasks ? tasks.filter(el => el.folId === folId).map(item => {\r\n                    return (<li key={item.id} className=\"tasks__item\">\r\n                        <a\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                if(e.target.classList.contains(\"task__link\")) COMPLETE_TASK(item.id);\r\n                            }}\r\n                            href=\"#\"\r\n                            className={setClass(item)}\r\n                            alt=\"check task\">\r\n                            {item.text}\r\n                            <button\r\n                                onClick={() => {\r\n                                    DELETE_TASK(item.id)\r\n                                }}\r\n                                className=\"tasks__del\"/>\r\n                        </a>\r\n\r\n                    </li>)\r\n                }) : \"\"}\r\n            </ul>\r\n            {openAddForm ?  <AddTask\r\n                    folId={folId}\r\n                    onClose={() => setOpenAddForm(false)}/> :\r\n                <button\r\n                onClick={() => setOpenAddForm(true)}\r\n                className=\"add__task\">Новая задача</button>}\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tasks: state.tasks\r\n    }\r\n};\r\nconst mapDispatchToProps = {\r\n    DELETE_TASK,\r\n    COMPLETE_TASK\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tasklist);","import React, {useState, useEffect, useRef} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport {RENAME_FOLDER} from \"../../actions\";\r\nimport Tasklist from \"../tasklist/tasklist\";\r\n\r\nimport \"./content.scss\"\r\n\r\n\r\nconst Content = ({folders, folId, RENAME_FOLDER}) => {\r\n    const [editable, setEditable] = useState(false);\r\n    const currentFolder = folders.filter(item => item.id === folId)[0];\r\n    const editRef = useRef();\r\n    const inputRef = useRef();\r\n\r\n    useEffect(() =>{\r\n        if(editable) {\r\n            document.addEventListener(\"click\", handleClick);\r\n        }\r\n        return () => {\r\n            document.removeEventListener(\"click\", handleClick);\r\n        }\r\n    });\r\n\r\n    const handleClick = (e) => {\r\n        const node = editRef.current;\r\n        if(inputRef.current.value !== inputRef.current.defaultValue) {\r\n            if(inputRef.current.value) RENAME_FOLDER(inputRef.current.value, editable);\r\n        }\r\n        if(!node || !node.contains(e.target)) setEditable(null);\r\n    };\r\n    const setClass = (item, isHeader = false, isEdit = false) => classNames({\r\n        header: isHeader,\r\n        edit__input: isEdit,\r\n        green_text: item.color === \"green\",\r\n        blue_text: item.color === \"blue\",\r\n        grass_text: item.color === \"grass\",\r\n        pink_text: item.color === \"pink\",\r\n        grey_text: item.color === \"grey\",\r\n        purple_text: item.color === \"purple\",\r\n        black_text: item.color === \"black\",\r\n        red_text: item.color === \"red\"\r\n    });\r\n\r\n    const editName = (elem) => {\r\n        return (\r\n            <header ref={editRef} className=\"content__header\">\r\n                <input\r\n                    onKeyPress={(e) => {\r\n                        if(e.key === \"Enter\") {\r\n                            if(inputRef.current.value !== \"\") {\r\n                                RENAME_FOLDER(inputRef.current.value, editable);\r\n                                setEditable(false);\r\n                            }\r\n                        }\r\n                    }}\r\n                    onBlur={() => {\r\n                        if(inputRef.current.value) {\r\n                            RENAME_FOLDER(inputRef.current.value, editable);\r\n                            setEditable(false);\r\n                        }\r\n                    }}\r\n                    ref={inputRef}\r\n                    autoFocus={true}\r\n                    className={setClass(elem, false, true)}\r\n                    type=\"text\"\r\n                    defaultValue={elem.title}/>\r\n                <button\r\n                    onClick={() => {\r\n                        if (inputRef.current.value !== inputRef.current.defaultValue) {\r\n                            if(inputRef.current.value !== \"\") RENAME_FOLDER(inputRef.current.value, editable);\r\n                        }\r\n                    }}\r\n                    className=\"edit__button\"/>\r\n            </header>\r\n        )\r\n    };\r\n    const showCurrent = (current) => {\r\n        return(\r\n            <>\r\n                    {editable ? editName(current) :\r\n                        <header className=\"content__header\">\r\n                            <h2\r\n                                onClick={() => setEditable(current.id)}\r\n                                className={setClass(current, true)}>{current.title}\r\n                                    <button\r\n                                        className=\"header__edit\">\r\n                                        <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M0 12.0504V14.5834C0 14.8167 0.183308 15 0.41661 15H2.9496C3.05792 15 3.16624 14.9583 3.24123 14.875L12.34 5.78458L9.21542 2.66001L0.124983 11.7504C0.0416611 11.8338 0 11.9338 0 12.0504ZM14.7563 3.36825C14.8336 3.29116 14.8949 3.1996 14.9367 3.0988C14.9785 2.99801 15 2.88995 15 2.78083C15 2.6717 14.9785 2.56365 14.9367 2.46285C14.8949 2.36205 14.8336 2.27049 14.7563 2.19341L12.8066 0.24367C12.7295 0.166428 12.6379 0.105146 12.5372 0.0633343C12.4364 0.021522 12.3283 0 12.2192 0C12.1101 0 12.002 0.021522 11.9012 0.0633343C11.8004 0.105146 11.7088 0.166428 11.6318 0.24367L10.107 1.76846L13.2315 4.89304L14.7563 3.36825Z\" fill=\"#DFDFDF\"/>\r\n                                        </svg>\r\n                                    </button>\r\n                            </h2>\r\n                        </header>\r\n                    }\r\n                <Tasklist folId={current.id}/>\r\n            </>\r\n        )\r\n    };\r\n    const showAll = (elems) => {\r\n        return (\r\n            <>\r\n                {elems.map(item => {\r\n                    return (\r\n                        <div key={item.id}>\r\n                            <header className=\"content__header\">\r\n                                {editable === item.id ? editName(item) :\r\n                                    <h2\r\n                                        onClick={() => setEditable(item.id)}\r\n                                        className={setClass(item, true)}>\r\n                                        {item.title}\r\n                                        <button\r\n                                            className=\"header__edit\">\r\n                                            <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\"\r\n                                                 xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path\r\n                                                    d=\"M0 12.0504V14.5834C0 14.8167 0.183308 15 0.41661 15H2.9496C3.05792 15 3.16624 14.9583 3.24123 14.875L12.34 5.78458L9.21542 2.66001L0.124983 11.7504C0.0416611 11.8338 0 11.9338 0 12.0504ZM14.7563 3.36825C14.8336 3.29116 14.8949 3.1996 14.9367 3.0988C14.9785 2.99801 15 2.88995 15 2.78083C15 2.6717 14.9785 2.56365 14.9367 2.46285C14.8949 2.36205 14.8336 2.27049 14.7563 2.19341L12.8066 0.24367C12.7295 0.166428 12.6379 0.105146 12.5372 0.0633343C12.4364 0.021522 12.3283 0 12.2192 0C12.1101 0 12.002 0.021522 11.9012 0.0633343C11.8004 0.105146 11.7088 0.166428 11.6318 0.24367L10.107 1.76846L13.2315 4.89304L14.7563 3.36825Z\"\r\n                                                    fill=\"#DFDFDF\"/>\r\n                                            </svg>\r\n                                        </button>\r\n                                    </h2>\r\n                                }\r\n                            </header>\r\n                            <Tasklist folId={item.id}/>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </>\r\n        )\r\n    };\r\n\r\n    return (\r\n\r\n        <section className=\"content\">\r\n            { folders.length ?\r\n                <>\r\n                    {currentFolder ? showCurrent(currentFolder) : showAll(folders)}\r\n                </> : <h2 className=\"empty\">Задачи отсутствуют</h2>\r\n            }\r\n        </section>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        folders: state.folders\r\n    }\r\n};\r\nconst mapDispatchToProps = {\r\n    RENAME_FOLDER\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Content);","import React, {useState} from \"react\";\r\nimport Navbar from \"../navbar/navbar\";\r\nimport Content from \"../content/content\";\r\n\r\nimport \"./app.scss\"\r\n\r\nconst App = () => {\r\n    const [folder, setFolder] = useState(null);\r\n\r\n    const selectFolder = (folId) => {\r\n        if(folId) setFolder(folId);\r\n        else setFolder(null);\r\n    };\r\n    return(\r\n        <main className=\"app\">\r\n            <Navbar onFolderChange={selectFolder}/>\r\n            <Content folId={folder}/>\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default App;","const initialstate = [{title:\"Покупки\", id: 1, color: \"green\"},\r\n        {title: \"Фронтенд\", id: 2, color: \"blue\"},\r\n        {title: \"Фильмы и сериалы\", id: 3, color: \"pink\"},\r\n        {title: \"Книги\", id: 4, color: \"grass\"},\r\n        {title: \"Личное\", id: 5, color: \"grey\"}\r\n        ];\r\n\r\nconst folders = (state = initialstate, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_FOLDER\": {\r\n            const {title, color, id} = action.payload;\r\n            const newState = [...state];\r\n            return [...newState, {\r\n                title,\r\n                id,\r\n                color\r\n            }]\r\n        }\r\n        case \"DELETE_FOLDER\": {\r\n            const newFolders = [...state];\r\n            return [...newFolders.filter(item => item.id !== action.payload)];\r\n        }\r\n        case \"RENAME_FOLDER\": {\r\n            const newFolders = [...state];\r\n            const idx = newFolders.findIndex(item => item.id === action.payload.id);\r\n            newFolders[idx].title = action.payload.title;\r\n            return [...newFolders];\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport default folders;","const initialstate = [\r\n        {id: 1, folId: 2, text: \"Изучить JavaScript\", done: false},\r\n        {id: 2, folId: 2, text: \"Изучить паттерны проектирования\", done: false},\r\n        {id: 3, folId: 2, text: \"ReactJS Hooks\", done: false},\r\n        {id: 4, folId: 2, text: \"Redux\", done: true},\r\n        {id: 5, folId: 1, text: \"Макарошки\", done: false},\r\n        {id: 6, folId: 1, text: \"Картошку\", done: false},\r\n        {id: 7, folId: 1, text: \"Биткоины\", done: false},\r\n        {id: 8, folId: 3, text: \"Мстители\", done: false},\r\n        {id: 9, folId: 3, text: \"Бетмен\", done: false},\r\n        {id: 10, folId: 3, text: \"Человек-Паук\", done: false},\r\n        {id: 11, folId: 4, text: \"Пушкин\", done: false},\r\n        {id: 12, folId: 4, text: \"Толстой\", done: false},\r\n        {id: 13, folId: 4, text: \"Достоевский\", done: false},\r\n    ];\r\n\r\nconst tasks = (state = initialstate, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_TASK\": {\r\n            const {id, folId, text} = action.payload;\r\n            return [...state, {\r\n                id: id,\r\n                folId: folId,\r\n                text: text\r\n            }];\r\n        }\r\n        case \"DELETE_TASK\": {\r\n            const newTasks = [...state];\r\n            const idx = newTasks.findIndex(item => item.id === action.payload);\r\n            newTasks.splice(idx, 1);\r\n            return [...newTasks];\r\n        }\r\n        case \"COMPLETE_TASK\": {\r\n            const newTasks = [...state];\r\n            const idx = newTasks.findIndex(item => item.id === action.payload);\r\n            newTasks[idx].done ? newTasks[idx].done = false : newTasks[idx].done = true;\r\n            return [...newTasks];\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default tasks;","import {combineReducers} from \"redux\";\r\nimport folders from \"./folders\";\r\nimport tasks from \"./tasks\";\r\n\r\n\r\nexport default combineReducers({\r\n    folders: folders,\r\n    tasks: tasks\r\n});","import {createStore} from \"redux\";\r\nimport reducer from \"./reducers\";\r\n\r\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/app/app\";\nimport store from \"./store\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}